//------------------------------------------------------------------------------
// <auto-generated>
//     Denne kode blev oprettet ved hjælp af et værktøj.
//     Runtime-version:2.0.50727.4952
//
//     Ændringer af denne fil kan resultere i ukorrekt funktion, og ændringerne mistes, hvis
//     koden oprettes igen.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

namespace GANGLIONSendSMS
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "GatewaySoap", Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class Gateway : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback sendSMSesOperationCompleted;

        private System.Threading.SendOrPostCallback getSMSStatusesOperationCompleted;

        private System.Threading.SendOrPostCallback getSMSMessagesOperationCompleted;

        private System.Threading.SendOrPostCallback getSMSMessageOperationCompleted;

        private System.Threading.SendOrPostCallback deleteSMSOperationCompleted;

        private System.Threading.SendOrPostCallback deleteSMS1OperationCompleted;

        private System.Threading.SendOrPostCallback updateSMSOperationCompleted;

        private System.Threading.SendOrPostCallback sendMMSesOperationCompleted;

        private System.Threading.SendOrPostCallback getMMSStatusesOperationCompleted;

        private System.Threading.SendOrPostCallback getMMSMessagesOperationCompleted;

        private System.Threading.SendOrPostCallback getMMSMessageOperationCompleted;

        private System.Threading.SendOrPostCallback deleteMMSOperationCompleted;

        private System.Threading.SendOrPostCallback deleteMMS1OperationCompleted;

        private System.Threading.SendOrPostCallback sendEmailsOperationCompleted;

        /// <remarks/>
        public Gateway()
        {
            this.Url = "http://www.nimta.com/Gateway/Kunder/Opret/Gateway.asmx";
        }

        /// <remarks/>
        public event sendSMSesCompletedEventHandler sendSMSesCompleted;

        /// <remarks/>
        public event getSMSStatusesCompletedEventHandler getSMSStatusesCompleted;

        /// <remarks/>
        public event getSMSMessagesCompletedEventHandler getSMSMessagesCompleted;

        /// <remarks/>
        public event getSMSMessageCompletedEventHandler getSMSMessageCompleted;

        /// <remarks/>
        public event deleteSMSCompletedEventHandler deleteSMSCompleted;

        /// <remarks/>
        public event deleteSMS1CompletedEventHandler deleteSMS1Completed;

        /// <remarks/>
        public event updateSMSCompletedEventHandler updateSMSCompleted;

        /// <remarks/>
        public event sendMMSesCompletedEventHandler sendMMSesCompleted;

        /// <remarks/>
        public event getMMSStatusesCompletedEventHandler getMMSStatusesCompleted;

        /// <remarks/>
        public event getMMSMessagesCompletedEventHandler getMMSMessagesCompleted;

        /// <remarks/>
        public event getMMSMessageCompletedEventHandler getMMSMessageCompleted;

        /// <remarks/>
        public event deleteMMSCompletedEventHandler deleteMMSCompleted;

        /// <remarks/>
        public event deleteMMS1CompletedEventHandler deleteMMS1Completed;

        /// <remarks/>
        public event sendEmailsCompletedEventHandler sendEmailsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/sendSMSes", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] sendSMSes(string username, string password, string gatewayClass, SMSSendMessage[] messages)
        {
            object[] results = this.Invoke("sendSMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendSMSes(string username, string password, string gatewayClass, SMSSendMessage[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("sendSMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndsendSMSes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void sendSMSesAsync(string username, string password, string gatewayClass, SMSSendMessage[] messages)
        {
            this.sendSMSesAsync(username, password, gatewayClass, messages, null);
        }

        /// <remarks/>
        public void sendSMSesAsync(string username, string password, string gatewayClass, SMSSendMessage[] messages, object userState)
        {
            if ((this.sendSMSesOperationCompleted == null))
            {
                this.sendSMSesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMSesOperationCompleted);
            }
            this.InvokeAsync("sendSMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, this.sendSMSesOperationCompleted, userState);
        }

        private void OnsendSMSesOperationCompleted(object arg)
        {
            if ((this.sendSMSesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMSesCompleted(this, new sendSMSesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getSMSStatuses", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Status[] getSMSStatuses(string username, string password, SMSGetStatusQuery query)
        {
            object[] results = this.Invoke("getSMSStatuses", new object[] {
                    username,
                    password,
                    query});
            return ((Status[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetSMSStatuses(string username, string password, SMSGetStatusQuery query, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getSMSStatuses", new object[] {
                    username,
                    password,
                    query}, callback, asyncState);
        }

        /// <remarks/>
        public Status[] EndgetSMSStatuses(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Status[])(results[0]));
        }

        /// <remarks/>
        public void getSMSStatusesAsync(string username, string password, SMSGetStatusQuery query)
        {
            this.getSMSStatusesAsync(username, password, query, null);
        }

        /// <remarks/>
        public void getSMSStatusesAsync(string username, string password, SMSGetStatusQuery query, object userState)
        {
            if ((this.getSMSStatusesOperationCompleted == null))
            {
                this.getSMSStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMSStatusesOperationCompleted);
            }
            this.InvokeAsync("getSMSStatuses", new object[] {
                    username,
                    password,
                    query}, this.getSMSStatusesOperationCompleted, userState);
        }

        private void OngetSMSStatusesOperationCompleted(object arg)
        {
            if ((this.getSMSStatusesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMSStatusesCompleted(this, new getSMSStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getSMSMessages", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getSMSMessages(string username, string password, SMSGetMessageQuery query)
        {
            object[] results = this.Invoke("getSMSMessages", new object[] {
                    username,
                    password,
                    query});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetSMSMessages(string username, string password, SMSGetMessageQuery query, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getSMSMessages", new object[] {
                    username,
                    password,
                    query}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndgetSMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void getSMSMessagesAsync(string username, string password, SMSGetMessageQuery query)
        {
            this.getSMSMessagesAsync(username, password, query, null);
        }

        /// <remarks/>
        public void getSMSMessagesAsync(string username, string password, SMSGetMessageQuery query, object userState)
        {
            if ((this.getSMSMessagesOperationCompleted == null))
            {
                this.getSMSMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMSMessagesOperationCompleted);
            }
            this.InvokeAsync("getSMSMessages", new object[] {
                    username,
                    password,
                    query}, this.getSMSMessagesOperationCompleted, userState);
        }

        private void OngetSMSMessagesOperationCompleted(object arg)
        {
            if ((this.getSMSMessagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMSMessagesCompleted(this, new getSMSMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getSMSMessage", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SMSSendMessage getSMSMessage(string username, string password, int messageID)
        {
            object[] results = this.Invoke("getSMSMessage", new object[] {
                    username,
                    password,
                    messageID});
            return ((SMSSendMessage)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetSMSMessage(string username, string password, int messageID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getSMSMessage", new object[] {
                    username,
                    password,
                    messageID}, callback, asyncState);
        }

        /// <remarks/>
        public SMSSendMessage EndgetSMSMessage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SMSSendMessage)(results[0]));
        }

        /// <remarks/>
        public void getSMSMessageAsync(string username, string password, int messageID)
        {
            this.getSMSMessageAsync(username, password, messageID, null);
        }

        /// <remarks/>
        public void getSMSMessageAsync(string username, string password, int messageID, object userState)
        {
            if ((this.getSMSMessageOperationCompleted == null))
            {
                this.getSMSMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMSMessageOperationCompleted);
            }
            this.InvokeAsync("getSMSMessage", new object[] {
                    username,
                    password,
                    messageID}, this.getSMSMessageOperationCompleted, userState);
        }

        private void OngetSMSMessageOperationCompleted(object arg)
        {
            if ((this.getSMSMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMSMessageCompleted(this, new getSMSMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/deleteSMSMessage", RequestElementName = "deleteSMSMessage", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseElementName = "deleteSMSMessageResponse", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteSMS(string username, string password, int messageID)
        {
            this.Invoke("deleteSMS", new object[] {
                    username,
                    password,
                    messageID});
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteSMS(string username, string password, int messageID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteSMS", new object[] {
                    username,
                    password,
                    messageID}, callback, asyncState);
        }

        /// <remarks/>
        public void EnddeleteSMS(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteSMSAsync(string username, string password, int messageID)
        {
            this.deleteSMSAsync(username, password, messageID, null);
        }

        /// <remarks/>
        public void deleteSMSAsync(string username, string password, int messageID, object userState)
        {
            if ((this.deleteSMSOperationCompleted == null))
            {
                this.deleteSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSMSOperationCompleted);
            }
            this.InvokeAsync("deleteSMS", new object[] {
                    username,
                    password,
                    messageID}, this.deleteSMSOperationCompleted, userState);
        }

        private void OndeleteSMSOperationCompleted(object arg)
        {
            if ((this.deleteSMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName = "deleteSMS1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/deleteSMSRecipient", RequestElementName = "deleteSMSRecipient", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseElementName = "deleteSMSRecipientResponse", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteSMS(string username, string password, int messageID, string countryCode, string number)
        {
            this.Invoke("deleteSMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number});
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteSMS1(string username, string password, int messageID, string countryCode, string number, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteSMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number}, callback, asyncState);
        }

        /// <remarks/>
        public void EnddeleteSMS1(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteSMS1Async(string username, string password, int messageID, string countryCode, string number)
        {
            this.deleteSMS1Async(username, password, messageID, countryCode, number, null);
        }

        /// <remarks/>
        public void deleteSMS1Async(string username, string password, int messageID, string countryCode, string number, object userState)
        {
            if ((this.deleteSMS1OperationCompleted == null))
            {
                this.deleteSMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSMS1OperationCompleted);
            }
            this.InvokeAsync("deleteSMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number}, this.deleteSMS1OperationCompleted, userState);
        }

        private void OndeleteSMS1OperationCompleted(object arg)
        {
            if ((this.deleteSMS1Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSMS1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/updateSMSMessage", RequestElementName = "updateSMSMessage", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseElementName = "updateSMSMessageResponse", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateSMS(string username, string password, string gatewayClass, int messageID, SMSSendMessage updatedSMS)
        {
            this.Invoke("updateSMS", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messageID,
                    updatedSMS});
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateSMS(string username, string password, string gatewayClass, int messageID, SMSSendMessage updatedSMS, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateSMS", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messageID,
                    updatedSMS}, callback, asyncState);
        }

        /// <remarks/>
        public void EndupdateSMS(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updateSMSAsync(string username, string password, string gatewayClass, int messageID, SMSSendMessage updatedSMS)
        {
            this.updateSMSAsync(username, password, gatewayClass, messageID, updatedSMS, null);
        }

        /// <remarks/>
        public void updateSMSAsync(string username, string password, string gatewayClass, int messageID, SMSSendMessage updatedSMS, object userState)
        {
            if ((this.updateSMSOperationCompleted == null))
            {
                this.updateSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSMSOperationCompleted);
            }
            this.InvokeAsync("updateSMS", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messageID,
                    updatedSMS}, this.updateSMSOperationCompleted, userState);
        }

        private void OnupdateSMSOperationCompleted(object arg)
        {
            if ((this.updateSMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/sendMMSes", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] sendMMSes(string username, string password, string gatewayClass, MMSSendMessage[] messages)
        {
            object[] results = this.Invoke("sendMMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendMMSes(string username, string password, string gatewayClass, MMSSendMessage[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("sendMMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndsendMMSes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void sendMMSesAsync(string username, string password, string gatewayClass, MMSSendMessage[] messages)
        {
            this.sendMMSesAsync(username, password, gatewayClass, messages, null);
        }

        /// <remarks/>
        public void sendMMSesAsync(string username, string password, string gatewayClass, MMSSendMessage[] messages, object userState)
        {
            if ((this.sendMMSesOperationCompleted == null))
            {
                this.sendMMSesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMMSesOperationCompleted);
            }
            this.InvokeAsync("sendMMSes", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, this.sendMMSesOperationCompleted, userState);
        }

        private void OnsendMMSesOperationCompleted(object arg)
        {
            if ((this.sendMMSesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMMSesCompleted(this, new sendMMSesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getMMSStatuses", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Status[] getMMSStatuses(string username, string password, MMSGetStatusQuery query)
        {
            object[] results = this.Invoke("getMMSStatuses", new object[] {
                    username,
                    password,
                    query});
            return ((Status[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMMSStatuses(string username, string password, MMSGetStatusQuery query, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMMSStatuses", new object[] {
                    username,
                    password,
                    query}, callback, asyncState);
        }

        /// <remarks/>
        public Status[] EndgetMMSStatuses(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Status[])(results[0]));
        }

        /// <remarks/>
        public void getMMSStatusesAsync(string username, string password, MMSGetStatusQuery query)
        {
            this.getMMSStatusesAsync(username, password, query, null);
        }

        /// <remarks/>
        public void getMMSStatusesAsync(string username, string password, MMSGetStatusQuery query, object userState)
        {
            if ((this.getMMSStatusesOperationCompleted == null))
            {
                this.getMMSStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMMSStatusesOperationCompleted);
            }
            this.InvokeAsync("getMMSStatuses", new object[] {
                    username,
                    password,
                    query}, this.getMMSStatusesOperationCompleted, userState);
        }

        private void OngetMMSStatusesOperationCompleted(object arg)
        {
            if ((this.getMMSStatusesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMMSStatusesCompleted(this, new getMMSStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getMMSMessages", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getMMSMessages(string username, string password, MMSGetMessageQuery query)
        {
            object[] results = this.Invoke("getMMSMessages", new object[] {
                    username,
                    password,
                    query});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMMSMessages(string username, string password, MMSGetMessageQuery query, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMMSMessages", new object[] {
                    username,
                    password,
                    query}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndgetMMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void getMMSMessagesAsync(string username, string password, MMSGetMessageQuery query)
        {
            this.getMMSMessagesAsync(username, password, query, null);
        }

        /// <remarks/>
        public void getMMSMessagesAsync(string username, string password, MMSGetMessageQuery query, object userState)
        {
            if ((this.getMMSMessagesOperationCompleted == null))
            {
                this.getMMSMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMMSMessagesOperationCompleted);
            }
            this.InvokeAsync("getMMSMessages", new object[] {
                    username,
                    password,
                    query}, this.getMMSMessagesOperationCompleted, userState);
        }

        private void OngetMMSMessagesOperationCompleted(object arg)
        {
            if ((this.getMMSMessagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMMSMessagesCompleted(this, new getMMSMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/getMMSMessage", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MMSSendMessage getMMSMessage(string username, string password, int messageID)
        {
            object[] results = this.Invoke("getMMSMessage", new object[] {
                    username,
                    password,
                    messageID});
            return ((MMSSendMessage)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMMSMessage(string username, string password, int messageID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMMSMessage", new object[] {
                    username,
                    password,
                    messageID}, callback, asyncState);
        }

        /// <remarks/>
        public MMSSendMessage EndgetMMSMessage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MMSSendMessage)(results[0]));
        }

        /// <remarks/>
        public void getMMSMessageAsync(string username, string password, int messageID)
        {
            this.getMMSMessageAsync(username, password, messageID, null);
        }

        /// <remarks/>
        public void getMMSMessageAsync(string username, string password, int messageID, object userState)
        {
            if ((this.getMMSMessageOperationCompleted == null))
            {
                this.getMMSMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMMSMessageOperationCompleted);
            }
            this.InvokeAsync("getMMSMessage", new object[] {
                    username,
                    password,
                    messageID}, this.getMMSMessageOperationCompleted, userState);
        }

        private void OngetMMSMessageOperationCompleted(object arg)
        {
            if ((this.getMMSMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMMSMessageCompleted(this, new getMMSMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/deleteMMSMessage", RequestElementName = "deleteMMSMessage", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseElementName = "deleteMMSMessageResponse", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteMMS(string username, string password, int messageID)
        {
            this.Invoke("deleteMMS", new object[] {
                    username,
                    password,
                    messageID});
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteMMS(string username, string password, int messageID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteMMS", new object[] {
                    username,
                    password,
                    messageID}, callback, asyncState);
        }

        /// <remarks/>
        public void EnddeleteMMS(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteMMSAsync(string username, string password, int messageID)
        {
            this.deleteMMSAsync(username, password, messageID, null);
        }

        /// <remarks/>
        public void deleteMMSAsync(string username, string password, int messageID, object userState)
        {
            if ((this.deleteMMSOperationCompleted == null))
            {
                this.deleteMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMMSOperationCompleted);
            }
            this.InvokeAsync("deleteMMS", new object[] {
                    username,
                    password,
                    messageID}, this.deleteMMSOperationCompleted, userState);
        }

        private void OndeleteMMSOperationCompleted(object arg)
        {
            if ((this.deleteMMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName = "deleteMMS1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/deleteMMSRecipient", RequestElementName = "deleteMMSRecipient", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseElementName = "deleteMMSRecipientResponse", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteMMS(string username, string password, int messageID, string countryCode, string number)
        {
            this.Invoke("deleteMMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number});
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteMMS1(string username, string password, int messageID, string countryCode, string number, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteMMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number}, callback, asyncState);
        }

        /// <remarks/>
        public void EnddeleteMMS1(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteMMS1Async(string username, string password, int messageID, string countryCode, string number)
        {
            this.deleteMMS1Async(username, password, messageID, countryCode, number, null);
        }

        /// <remarks/>
        public void deleteMMS1Async(string username, string password, int messageID, string countryCode, string number, object userState)
        {
            if ((this.deleteMMS1OperationCompleted == null))
            {
                this.deleteMMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMMS1OperationCompleted);
            }
            this.InvokeAsync("deleteMMS1", new object[] {
                    username,
                    password,
                    messageID,
                    countryCode,
                    number}, this.deleteMMS1OperationCompleted, userState);
        }

        private void OndeleteMMS1OperationCompleted(object arg)
        {
            if ((this.deleteMMS1Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMMS1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nimta.com/webservices/Gateway/sendEmails", RequestNamespace = "http://www.nimta.com/webservices/Gateway", ResponseNamespace = "http://www.nimta.com/webservices/Gateway", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] sendEmails(string username, string password, string gatewayClass, EmailSendMessage[] messages)
        {
            object[] results = this.Invoke("sendEmails", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendEmails(string username, string password, string gatewayClass, EmailSendMessage[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("sendEmails", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndsendEmails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void sendEmailsAsync(string username, string password, string gatewayClass, EmailSendMessage[] messages)
        {
            this.sendEmailsAsync(username, password, gatewayClass, messages, null);
        }

        /// <remarks/>
        public void sendEmailsAsync(string username, string password, string gatewayClass, EmailSendMessage[] messages, object userState)
        {
            if ((this.sendEmailsOperationCompleted == null))
            {
                this.sendEmailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendEmailsOperationCompleted);
            }
            this.InvokeAsync("sendEmails", new object[] {
                    username,
                    password,
                    gatewayClass,
                    messages}, this.sendEmailsOperationCompleted, userState);
        }

        private void OnsendEmailsOperationCompleted(object arg)
        {
            if ((this.sendEmailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendEmailsCompleted(this, new sendEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class SMSSendMessage
    {

        private string wapurlField;

        private string messageField;

        private string alphatextField;

        private int chargeField;

        private string donationField;

        private bool delayedField;

        private System.DateTime sendTimeField;

        private Recipient[] recipientsField;

        /// <remarks/>
        public string wapurl
        {
            get
            {
                return this.wapurlField;
            }
            set
            {
                this.wapurlField = value;
            }
        }

        /// <remarks/>
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        public string alphatext
        {
            get
            {
                return this.alphatextField;
            }
            set
            {
                this.alphatextField = value;
            }
        }

        /// <remarks/>
        public int charge
        {
            get
            {
                return this.chargeField;
            }
            set
            {
                this.chargeField = value;
            }
        }

        /// <remarks/>
        public string donation
        {
            get
            {
                return this.donationField;
            }
            set
            {
                this.donationField = value;
            }
        }

        /// <remarks/>
        public bool delayed
        {
            get
            {
                return this.delayedField;
            }
            set
            {
                this.delayedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime sendTime
        {
            get
            {
                return this.sendTimeField;
            }
            set
            {
                this.sendTimeField = value;
            }
        }

        /// <remarks/>
        public Recipient[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class Recipient
    {

        private string countryCodeField;

        private string numberField;

        private int operatorCodeField;

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public int operatorCode
        {
            get
            {
                return this.operatorCodeField;
            }
            set
            {
                this.operatorCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class EmailAttachment
    {

        private string urlField;

        private string mimetypeField;

        /// <remarks/>
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }

        /// <remarks/>
        public string mimetype
        {
            get
            {
                return this.mimetypeField;
            }
            set
            {
                this.mimetypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class EmailRecipient
    {

        private string emailaddressField;

        private string nameField;

        private string[] tagvaluesField;

        /// <remarks/>
        public string emailaddress
        {
            get
            {
                return this.emailaddressField;
            }
            set
            {
                this.emailaddressField = value;
            }
        }

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string[] tagvalues
        {
            get
            {
                return this.tagvaluesField;
            }
            set
            {
                this.tagvaluesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class EmailSendMessage
    {

        private string htmlbodyField;

        private string textbodyField;

        private string senderAddressField;

        private string senderNameField;

        private string replyAddressField;

        private string replyNameField;

        private string subjectField;

        private string[] tagsField;

        private bool delayedField;

        private System.DateTime sendTimeField;

        private EmailRecipient[] recipientsField;

        private EmailAttachment[] attachmentsField;

        /// <remarks/>
        public string htmlbody
        {
            get
            {
                return this.htmlbodyField;
            }
            set
            {
                this.htmlbodyField = value;
            }
        }

        /// <remarks/>
        public string textbody
        {
            get
            {
                return this.textbodyField;
            }
            set
            {
                this.textbodyField = value;
            }
        }

        /// <remarks/>
        public string senderAddress
        {
            get
            {
                return this.senderAddressField;
            }
            set
            {
                this.senderAddressField = value;
            }
        }

        /// <remarks/>
        public string senderName
        {
            get
            {
                return this.senderNameField;
            }
            set
            {
                this.senderNameField = value;
            }
        }

        /// <remarks/>
        public string replyAddress
        {
            get
            {
                return this.replyAddressField;
            }
            set
            {
                this.replyAddressField = value;
            }
        }

        /// <remarks/>
        public string replyName
        {
            get
            {
                return this.replyNameField;
            }
            set
            {
                this.replyNameField = value;
            }
        }

        /// <remarks/>
        public string subject
        {
            get
            {
                return this.subjectField;
            }
            set
            {
                this.subjectField = value;
            }
        }

        /// <remarks/>
        public string[] tags
        {
            get
            {
                return this.tagsField;
            }
            set
            {
                this.tagsField = value;
            }
        }

        /// <remarks/>
        public bool delayed
        {
            get
            {
                return this.delayedField;
            }
            set
            {
                this.delayedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime sendTime
        {
            get
            {
                return this.sendTimeField;
            }
            set
            {
                this.sendTimeField = value;
            }
        }

        /// <remarks/>
        public EmailRecipient[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }

        /// <remarks/>
        public EmailAttachment[] attachments
        {
            get
            {
                return this.attachmentsField;
            }
            set
            {
                this.attachmentsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class MMSGetMessageQuery
    {

        private string gatewayClassField;

        private string countryCodeField;

        private string numberField;

        private bool specifyIntervalField;

        private System.DateTime intervalStartField;

        private System.DateTime intervalEndField;

        private byte statusCodeField;

        /// <remarks/>
        public string gatewayClass
        {
            get
            {
                return this.gatewayClassField;
            }
            set
            {
                this.gatewayClassField = value;
            }
        }

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public bool specifyInterval
        {
            get
            {
                return this.specifyIntervalField;
            }
            set
            {
                this.specifyIntervalField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalStart
        {
            get
            {
                return this.intervalStartField;
            }
            set
            {
                this.intervalStartField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalEnd
        {
            get
            {
                return this.intervalEndField;
            }
            set
            {
                this.intervalEndField = value;
            }
        }

        /// <remarks/>
        public byte statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class MMSGetStatusQuery
    {

        private int messageIDField;

        private string countryCodeField;

        private string numberField;

        private bool specifyIntervalField;

        private System.DateTime intervalStartField;

        private System.DateTime intervalEndField;

        /// <remarks/>
        public int messageID
        {
            get
            {
                return this.messageIDField;
            }
            set
            {
                this.messageIDField = value;
            }
        }

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public bool specifyInterval
        {
            get
            {
                return this.specifyIntervalField;
            }
            set
            {
                this.specifyIntervalField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalStart
        {
            get
            {
                return this.intervalStartField;
            }
            set
            {
                this.intervalStartField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalEnd
        {
            get
            {
                return this.intervalEndField;
            }
            set
            {
                this.intervalEndField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class MMSSendMessage
    {

        private string messageField;

        private string alphatextField;

        private string subjectField;

        private int chargeField;

        private bool delayedField;

        private System.DateTime sendTimeField;

        private Recipient[] recipientsField;

        private string[] pictureFilesField;

        private string[] soundFilesField;

        private string[] videoFilesField;

        private string[] textsField;

        private string[] smilFilesField;

        /// <remarks/>
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        public string alphatext
        {
            get
            {
                return this.alphatextField;
            }
            set
            {
                this.alphatextField = value;
            }
        }

        /// <remarks/>
        public string subject
        {
            get
            {
                return this.subjectField;
            }
            set
            {
                this.subjectField = value;
            }
        }

        /// <remarks/>
        public int charge
        {
            get
            {
                return this.chargeField;
            }
            set
            {
                this.chargeField = value;
            }
        }

        /// <remarks/>
        public bool delayed
        {
            get
            {
                return this.delayedField;
            }
            set
            {
                this.delayedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime sendTime
        {
            get
            {
                return this.sendTimeField;
            }
            set
            {
                this.sendTimeField = value;
            }
        }

        /// <remarks/>
        public Recipient[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }

        /// <remarks/>
        public string[] pictureFiles
        {
            get
            {
                return this.pictureFilesField;
            }
            set
            {
                this.pictureFilesField = value;
            }
        }

        /// <remarks/>
        public string[] soundFiles
        {
            get
            {
                return this.soundFilesField;
            }
            set
            {
                this.soundFilesField = value;
            }
        }

        /// <remarks/>
        public string[] videoFiles
        {
            get
            {
                return this.videoFilesField;
            }
            set
            {
                this.videoFilesField = value;
            }
        }

        /// <remarks/>
        public string[] texts
        {
            get
            {
                return this.textsField;
            }
            set
            {
                this.textsField = value;
            }
        }

        /// <remarks/>
        public string[] smilFiles
        {
            get
            {
                return this.smilFilesField;
            }
            set
            {
                this.smilFilesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class SMSGetMessageQuery
    {

        private string gatewayClassField;

        private string countryCodeField;

        private string numberField;

        private bool specifyIntervalField;

        private System.DateTime intervalStartField;

        private System.DateTime intervalEndField;

        private byte statusCodeField;

        /// <remarks/>
        public string gatewayClass
        {
            get
            {
                return this.gatewayClassField;
            }
            set
            {
                this.gatewayClassField = value;
            }
        }

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public bool specifyInterval
        {
            get
            {
                return this.specifyIntervalField;
            }
            set
            {
                this.specifyIntervalField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalStart
        {
            get
            {
                return this.intervalStartField;
            }
            set
            {
                this.intervalStartField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalEnd
        {
            get
            {
                return this.intervalEndField;
            }
            set
            {
                this.intervalEndField = value;
            }
        }

        /// <remarks/>
        public byte statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class Status
    {

        private int messageIDField;

        private string countryCodeField;

        private string numberField;

        private System.DateTime latestStatusField;

        private byte statusCodeField;

        private byte errorCodeField;

        /// <remarks/>
        public int messageID
        {
            get
            {
                return this.messageIDField;
            }
            set
            {
                this.messageIDField = value;
            }
        }

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public System.DateTime latestStatus
        {
            get
            {
                return this.latestStatusField;
            }
            set
            {
                this.latestStatusField = value;
            }
        }

        /// <remarks/>
        public byte statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }

        /// <remarks/>
        public byte errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.nimta.com/webservices/Gateway")]
    public partial class SMSGetStatusQuery
    {

        private int messageIDField;

        private string countryCodeField;

        private string numberField;

        private bool specifyIntervalField;

        private System.DateTime intervalStartField;

        private System.DateTime intervalEndField;

        /// <remarks/>
        public int messageID
        {
            get
            {
                return this.messageIDField;
            }
            set
            {
                this.messageIDField = value;
            }
        }

        /// <remarks/>
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public bool specifyInterval
        {
            get
            {
                return this.specifyIntervalField;
            }
            set
            {
                this.specifyIntervalField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalStart
        {
            get
            {
                return this.intervalStartField;
            }
            set
            {
                this.intervalStartField = value;
            }
        }

        /// <remarks/>
        public System.DateTime intervalEnd
        {
            get
            {
                return this.intervalEndField;
            }
            set
            {
                this.intervalEndField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void sendSMSesCompletedEventHandler(object sender, sendSMSesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMSesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendSMSesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getSMSStatusesCompletedEventHandler(object sender, getSMSStatusesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMSStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getSMSStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Status[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Status[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getSMSMessagesCompletedEventHandler(object sender, getSMSMessagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMSMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getSMSMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getSMSMessageCompletedEventHandler(object sender, getSMSMessageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMSMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getSMSMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SMSSendMessage Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SMSSendMessage)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteSMS1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void updateSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void sendMMSesCompletedEventHandler(object sender, sendMMSesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMMSesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendMMSesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMMSStatusesCompletedEventHandler(object sender, getMMSStatusesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMMSStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMMSStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Status[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Status[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMMSMessagesCompletedEventHandler(object sender, getMMSMessagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMMSMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMMSMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMMSMessageCompletedEventHandler(object sender, getMMSMessageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMMSMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMMSMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MMSSendMessage Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MMSSendMessage)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteMMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteMMS1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void sendEmailsCompletedEventHandler(object sender, sendEmailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendEmailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendEmailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
}
